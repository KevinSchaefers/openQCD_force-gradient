################################################################################
#
# Makefile to compile and link C programs with MPI subroutines
#
# Version valid for Linux machines with MPICH
#
# "make" compiles and links the specified main programs and modules,
# using the specified libraries (if any), and produces the executables
#
# "make clean" removes all files generated by "make"
#
# Dependencies on included files are automatically taken care of
#
################################################################################

all: rmxeq mkdep mkxeq
.PHONY: all


# main programs and modules to be compiled

MAIN = check1 check2 check3 check4 check5 check6 check7 \
       check8 check9 check10 check11 check12 time1

ARCHIVE = archive iodat marchive sarchive

BLOCK = block blk_grid map_u2blk map_sw2blk map_s2blk

DEVFCTS = dutils gtrans rotud

DFL = dfl_geometry dfl_modes dfl_sap_gcr dfl_subspace ltl_gcr

DIRAC = Dw_dble Dw Dw_bnd

FLAGS = action_parms dfl_parms flags force_parms hmc_parms lat_parms \
        sap_parms smd_parms solver_parms mdint_parms rat_parms

FORCES = force0 force1 force2 force3 force4 force5 \
         frcfcts genfrc tmcg tmcgm xtensor

LATTICE = bcnds blk_geometry uidx ftidx geogen geometry

LINALG = salg salg_dble valg valg_dble liealg cmatrix_dble cmatrix

LINSOLV = cgne fgcr fgcr4vd gcr4v mscg

LITTLE = Aw Aw_blk Aw_com1 Aw_com2 Aw_dble Aw_gen Aw_hop Aw_ops \
         ltl_modes

MDFLDS = mdflds fcom

RANDOM = ranlux ranlux_common ranlxs ranlxd gauss

RATFCTS = elliptic zolotarev ratfcts

SAP = sap_com sap_gcr sap blk_solv

SFLDS = sflds scom sdcom Pbnd Pbnd_dble unorm

SU3FCTS = chexp su3prod su3ren cm3x3 random_su3

SW_TERM = pauli pauli_dble swalg swexp swflds sw_term

TCHARGE = ftcom ftensor

UFLDS = bstap plaq_sum shift udcom uflds uinit

UPDATE = chrono wsize

UTILS = array endian error futils mutils qsum utils wspace

VFLDS = vflds vinit vcom vdcom

MODULES = $(ARCHIVE) $(BLOCK) $(DEVFCTS) $(DFL) $(DIRAC) $(FLAGS) $(FORCES) \
          $(LATTICE) $(LINALG) $(LINSOLV) $(LITTLE) $(LOCAL) $(MDFLDS) \
          $(RANDOM) $(RATFCTS) $(SAP) $(SFLDS) $(SU3FCTS) $(SW_TERM) \
          $(TCHARGE) $(UFLDS) $(UPDATE) $(UTILS) $(VFLDS)


# Logging option (-mpilog or -mpitrace or -mpianim)

LOGOPTION =


# search path for modules

MDIR = ../../modules

VPATH = .:$(MDIR)/flags:$(MDIR)/lattice:$(MDIR)/archive:$(MDIR)/linalg:\
          $(MDIR)/random:$(MDIR)/uflds:$(MDIR)/mdflds:$(MDIR)/su3fcts:\
          $(MDIR)/utils:$(MDIR)/forces:$(MDIR)/sflds:$(MDIR)/dirac:\
	  $(MDIR)/sw_term:$(MDIR)/tcharge:$(MDIR)/block:$(MDIR)/sap:\
	  $(MDIR)/linsolv:$(MDIR)/dfl:$(MDIR)/vflds:$(MDIR)/little:\
          $(MDIR)/update:$(MDIR)/ratfcts:$(MDIR)/devfcts


# additional include directories

INCPATH = $(MPI_INCLUDE) ../../include


# additional libraries

LIBS = m

LIBPATH = $(MPI_HOME)/lib


# scheduling and optimization options

CFLAGS = -std=c89 -pedantic -fstrict-aliasing -fopenmp -Wall \
         -Wno-long-long -Wno-format-overflow -Wstrict-prototypes -Werror \
         -O -mfpmath=sse -mno-avx -DAVX -DFMA3 -DPM

LFLAGS = -fopenmp

# -DCGNE_DBG -DFGCR_DBG -DFGCR4VD -DGCR4V -DMSCG_DBG
# -DDFL_MODES_DBG -DFORCE_DBG


############################## do not change ###################################

SHELL=/bin/bash
CC=mpicc
CLINKER=$(CC)

PGMS= $(MAIN) $(MODULES)

-include $(addsuffix .d,$(PGMS))


# rule to make dependencies

$(addsuffix .d,$(PGMS)): %.d: %.c Makefile
	@ $(GCC) -ansi $< -MM $(addprefix -I,$(INCPATH)) -o $@


# rule to compile source programs

$(addsuffix .o,$(PGMS)): %.o: %.c Makefile
	$(CC) $< -c $(CFLAGS) $(LOGOPTION) $(addprefix -I,$(INCPATH))


# rule to link object files

$(MAIN): %: %.o $(addsuffix .o,$(MODULES)) Makefile
	$(CLINKER) $< $(addsuffix .o,$(MODULES)) $(LFLAGS) $(LOGOPTION) \
        $(addprefix -L,$(LIBPATH)) $(addprefix -l,$(LIBS)) -o $@


# produce executables

mkxeq: $(MAIN)


# remove old executables

rmxeq:
	@ -rm -f $(MAIN); \
        echo "delete old executables"


# make dependencies

mkdep:  $(addsuffix .d,$(PGMS))
	@ echo "generate tables of dependencies"


# clean directory

clean:
	@ -rm -rf *.d *.o *.alog *.clog *.slog $(MAIN)
.PHONY: clean

################################################################################
